services:
  db:
    image: postgres
    volumes:
      - ./data/db:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/create_schemas.sql
    ports:
      - "5434:5432"
    container_name: yandex_bank_db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=yandex_bank
    networks:
      - yandex_bank_network
  consul:
    image: hashicorp/consul
    container_name: consul
    hostname: consul
    ports:
      - "8500:8500"
      - "8600:8600/tcp"
      - "8600:8600/udp"
    volumes:
      - ./config:/consul/config
      - ./consul_data:/consul/data
    command: "agent -dev -client=0.0.0.0 -bootstrap-expect 1 -config-dir=/consul/config"
    healthcheck:
      test: [ "CMD", "consul", "members" ]
      interval: 5s
      timeout: 2s
      retries: 5
      start_period: 10s
    networks:
      - yandex_bank_network

  consul-kv-init:
    image: hashicorp/consul
    depends_on:
      consul:
        condition: service_healthy
    volumes:
      - ./bootstrap:/bootstrap
    networks:
      - yandex_bank_network
    command: >
      sh -c "
        while ! curl -s http://consul:8500/v1/status/leader; do
          echo 'Waiting for Consul leader...'
          sleep 1
        done;
        echo 'Consul leader elected. Importing KV data...';
        consul kv put -http-addr=http://consul:8500 config/blocker/data @/bootstrap/kv.yaml;
        echo 'KV data imported successfully!';
      "
    healthcheck:
      test: [ "CMD", "consul", "members" ]
      interval: 5s
      timeout: 2s
      retries: 5
  accountsApp:
    build:
      context: .
      dockerfile: accounts/Dockerfile
    image: yandex-bank-accounts
    container_name: accounts
    restart: always
    ports:
      - "8082:8082"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://yandex_bank_db:5432/yandex_bank?currentSchema=accounts
      consul_host: consul
      KEYCLOAK_URL: http://host.docker.internal:8085/realms/master
    depends_on:
      - db
      - consul
      - consul-kv-init
    networks:
      - yandex_bank_network
  blockerApp:
    build:
      context: .
      dockerfile: blocker/Dockerfile
    image: yandex-bank-blocker
    container_name: blocker
    restart: always
    ports:
      - "8088:8088"
    environment:
      consul_host: consul
      KEYCLOAK_URL: http://host.docker.internal:8085/realms/master
    depends_on:
      - db
      - consul
      - consul-kv-init
    networks:
      - yandex_bank_network
  cashApp:
    build:
      context: .
      dockerfile: cash/Dockerfile
    image: yandex-bank-cash
    container_name: cash
    restart: always
    ports:
      - "8083:8083"
    environment:
      consul_host: consul
      KEYCLOAK_URL: http://host.docker.internal:8085/realms/master
    depends_on:
      - db
      - consul
      - consul-kv-init
    networks:
      - yandex_bank_network
  exchangeApp:
    build:
      context: .
      dockerfile: exchange/Dockerfile
    image: yandex-bank-exchange
    container_name: exchange
    restart: always
    ports:
      - "8084:8084"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://yandex_bank_db:5432/yandex_bank?currentSchema=exchange
      consul_host: consul
      KEYCLOAK_URL: http://host.docker.internal:8085/realms/master
    depends_on:
      - db
      - consul
      - consul-kv-init
    networks:
      - yandex_bank_network
  exchangeGeneratorApp:
    build:
      context: .
      dockerfile: exchangeGenerator/Dockerfile
    image: yandex-bank-exchange-generator
    container_name: exchangeGenerator
    restart: always
    ports:
      - "8086:8086"
    environment:
      consul_host: consul
      KEYCLOAK_URL: http://host.docker.internal:8085/realms/master
    depends_on:
      - db
      - consul
      - consul-kv-init
    networks:
      - yandex_bank_network
  frontApp:
    build:
      context: .
      dockerfile: frontUI/Dockerfile
    image: yandex-bank-front
    container_name: front
    restart: always
    ports:
      - "8090:8090"
    environment:
      consul_host: consul
      KEYCLOAK_URL: http://host.docker.internal:8085/realms/master
    depends_on:
      - db
      - consul
      - consul-kv-init
    networks:
      - yandex_bank_network
  gatewayApp:
    build:
      context: .
      dockerfile: gateway/Dockerfile
    image: yandex-bank-gateway
    container_name: gateway
    restart: always
    ports:
      - "8080:8080"
    depends_on:
      - db
      - consul
      - consul-kv-init
    networks:
      - yandex_bank_network
  notificationsApp:
    build:
      context: .
      dockerfile: notifications/Dockerfile
    image: yandex-bank-notifications
    container_name: notifications
    restart: always
    ports:
      - "8092:8092"
    environment:
      consul_host: consul
      KEYCLOAK_URL: http://host.docker.internal:8085/realms/master
    depends_on:
      - db
      - consul
      - consul-kv-init
    networks:
      - yandex_bank_network
  transferApp:
    build:
      context: .
      dockerfile: transfer/Dockerfile
    image: yandex-bank-transfer
    container_name: transfer
    restart: always
    ports:
      - "8087:8087"
    environment:
      consul_host: consul
      KEYCLOAK_URL: http://host.docker.internal:8085/realms/master
    depends_on:
      - db
      - consul
      - consul-kv-init
    networks:
      - yandex_bank_network
networks:
  yandex_bank_network:
    driver: bridge